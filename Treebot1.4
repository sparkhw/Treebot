#include <Servo.h>

Servo ServoTop;
Servo ServoBot;

//Top gripper
int E1 = 5;
int M1 = 4;
//Bottom gripper
int E2 = 6;
int M2 = 7;

// defines pins numbers
const int trigPin = 6;
const int echoPin = 3;
// defines variables
long duration;
int distance;
const int safetyDistance = 10; // Safety distance threshold in cm

// record the gripper on the top
int topgripper = 2;

void setup()
{  
    pinMode(M1, OUTPUT);
    pinMode(E1, OUTPUT);
    pinMode(M2, OUTPUT);
    pinMode(E2, OUTPUT);
    ServoTop.attach(9);
    ServoBot.attach(10);
    pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
    pinMode(echoPin, INPUT); // Sets the echoPin as an Input
    Serial.begin(9600); // Starts the serial communication

    //set servo to zero degree
    ServoTop.writeMicroseconds(1500);
    delay(500); 

    //grippers hold on
    digitalWrite(M1, HIGH); 
    analogWrite(E1, 255);
    digitalWrite(M2, HIGH); 
    analogWrite(E2, 255);     
    delay(15000);           
    analogWrite(E1, 0); // Dc motor stop
    analogWrite(E2, 0);
    delay(500); 
}

void loop() {
    // Clears the trigPin
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    // Sets the trigPin on HIGH state for 10 microseconds
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
  
    // Reads the echoPin, returns the sound wave travel time in microseconds
    duration = pulseIn(echoPin, HIGH);
  
    // Calculating the distance
    distance = duration * 0.034 / 2;
  
    // Prints the distance on the Serial Monitor
    Serial.print("Distance: ");
    Serial.println(distance);

    if (distance > safetyDistance) {
        Serial.println("Object detected within safety distance. Running main operations.");

        // Gripper release (anticlockwise)
        digitalWrite(M1, LOW); 
        analogWrite(E1, 255);  
        delay(15000);  
        analogWrite(E1, 0); // Dc motor stop
        delay(500); 

        // Anticlockwise 180 degree turn
        ServoTop.writeMicroseconds(1700); 
        delay(1000);  // Rotate anti clockwise (180 degree turn)
        ServoTop.writeMicroseconds(1500); // servo stop
        delay(500); 
        topgripper = 1;

        // Gripper hold on (clockwise)
        digitalWrite(M1, HIGH); 
        analogWrite(E1, 255); 
        delay(15000); 
        analogWrite(E1, 0); // Dc motor stop
        delay(500); 

        // Gripper release (anticlockwise)
        digitalWrite(M2, LOW); 
        analogWrite(E2, 255);  
        delay(15000);  
        analogWrite(E2, 0); // Dc motor stop
        delay(500); 
        
        // Anticlockwise 180 degree turn
        ServoBot.writeMicroseconds(1700); 
        delay(1000);  // Rotate anti clockwise (180 degree turn)
        ServoBot.writeMicroseconds(1500); // servo stop
        delay(500); 
        topgripper = 1;

        // Gripper hold on (clockwise)
        digitalWrite(M2, HIGH); 
        analogWrite(E2, 255); 
        delay(15000); 
        analogWrite(E2, 0); // Dc motor stop
        delay(500); 
    } else {
        Serial.println("Top reached, start climbing down");
        if (topgripper = 1){
        // Gripper release (anticlockwise)
        digitalWrite(M1, LOW); 
        analogWrite(E1, 255);  
        delay(15000);  
        analogWrite(E1, 0); // Dc motor stop
        delay(500); 

        // Anticlockwise 180 degree turn
        ServoBot.writeMicroseconds(1700); 
        delay(1000);  // Rotate anti clockwise (180 degree turn)
        ServoBot.writeMicroseconds(1500); // servo stop
        delay(500); 

        // Gripper hold on (clockwise)
        digitalWrite(M1, HIGH); 
        analogWrite(E1, 255); 
        delay(15000); 
        analogWrite(E1, 0); // Dc motor stop
        delay(500); 

        // Gripper release (anticlockwise)
        digitalWrite(M2, LOW); 
        analogWrite(E2, 255);  
        delay(15000);  
        analogWrite(E2, 0); // Dc motor stop
        delay(500); 

        // Anticlockwise 180 degree turn
        ServoTop.writeMicroseconds(1700); 
        delay(1000);  // Rotate anti clockwise (180 degree turn)
        ServoTop.writeMicroseconds(1500); // servo stop
        delay(500); 

        // Gripper hold on (clockwise)
        digitalWrite(M2, HIGH); 
        analogWrite(E2, 255); 
        delay(15000); 
        analogWrite(E2, 0); // Dc motor stop
        delay(500); 
        }
        else{
          
          // Gripper release (anticlockwise)
          digitalWrite(M2, LOW); 
          analogWrite(E12, 255);  
          delay(15000);  
          analogWrite(E2, 0); // Dc motor stop
          delay(500); 

          // Anticlockwise 180 degree turn
          ServoTop.writeMicroseconds(1700); 
          delay(1000);  // Rotate anti clockwise (180 degree turn)
          ServoTop.writeMicroseconds(1500); // servo stop
          delay(500); 

          // Gripper hold on (clockwise)
          digitalWrite(M2, HIGH); 
          analogWrite(E2, 255); 
          delay(15000); 
          analogWrite(E2, 0); // Dc motor stop
          delay(500); 

          // Gripper release (anticlockwise)
          digitalWrite(M1, LOW); 
          analogWrite(E1, 255);  
          delay(15000);  
          analogWrite(E1, 0); // Dc motor stop
          delay(500); 

          // Anticlockwise 180 degree turn
          ServoBot.writeMicroseconds(1700); 
          delay(1000);  // Rotate anti clockwise (180 degree turn)
          ServoBot.writeMicroseconds(1500); // servo stop
          delay(500); 

          // Gripper hold on (clockwise)
          digitalWrite(M1, HIGH); 
          analogWrite(E1, 255); 
          delay(15000); 
          analogWrite(E1, 0); // Dc motor stop
          delay(500); 
        
        }  
      }
}
